

{% block stylesheets %}


            <link rel="stylesheet" href="{{ asset('styles/app.scss') }}">
            <link rel="stylesheet" href="{{ asset('styles/mainContent.scss') }}">
            {{ encore_entry_link_tags('app') }}
{% endblock %}
<meta name="viewport" content="width=device-width, initial-scale=1.0">
{% block javascript %}

{% endblock %}
{% block body %}


    <div class="wholeRank">
    {% set nextId = id + 1 %} {# ID dla następnej podstrony #}     
    {% set prevId = id - 1 %} {# ID dla następnej podstrony #}   
      <div class="prevTopic">
        lorem
      </div>
      <div class="contentRank">
          <a href="/">
            <img src="{{ asset('images/logo (1) — kopia.png') }}" alt="MajcaEasyWayLogo">
          </a>
          {% if prevId >0 %}
            <div class="shapeGreen-2">
              <div class="circle-container">
                <svg class="rotating-text" width="150" height="150" viewBox="0 0 150 150">
                  <defs>
                    <path
                      id="circlePath"
                      d=" M 75, 75
                          m -65, 0
                          a 65,65 0 1,1 130,0
                          a 65,65 0 1,1 -130,0"
                    />
                  </defs>
                  <text fill="white" font-size="24" font-family="Arial" dominant-baseline="middle">
                    <textPath href="#circlePath" startOffset="50%">
                      <a href="http://localhost:8000/score/rank/{{ prevId }}" style="text-decoration: none; fill: white;">
                        {{ mathTopics[prevId-1].topicName }}
                      </a>
                    </textPath>
                  </text>
                </svg>
                <div class="play-icon">
                  <div class="triangle"></div>
                </div>
              </div>
            </div>  
          {% endif %}
       
            {% if nextId <= mathTopics|length %}


<style>
/* Container for the circle */
/* Container for the circle */

/* Rotating text */
.rotating-text {

  width: 100%;
  height: 100%;
  animation: rotate 10s linear infinite;
  z-index: 2;
}

.rotating-text text {
  text-anchor: middle;
  fill: white;
  font-size: 20px;
  font-family: Arial, sans-serif;
}

/* Play button in the center */
.play-icon {
  position: absolute;
  width: 40px;
  height: 40px;
  background-color: #4a148c;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 3;
}

.play-icon .triangle {
  width: 0;
  height: 0;
  border-left: 10px solid white;
  border-top: 7px solid transparent;
  border-bottom: 7px solid transparent;
}

/* Keyframes for rotating text */
@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(0deg);
  }
}
</style>
  
                    
                    
            <div class="contentRank">
              {% set counter = 1 %}
                <div class = 'rankTable'>
                  {% for category in product1 %}
                    <!--{% if counter is divisible by(2) %}{{counter}}{% endif %}-->   
                      <div class="rankPerson">
                        <span class="id"> {{ counter }}</span>
                        <span class="name"> {{ category.nickName }}</span>
                        <span class="topic"> {{ category.topic }}</span>
                        <span class="score"> {{ category.score }}</span><br/>
                        {% set counter = counter + 1 %}
                      </div>
                  {% endfor %}
                </div>
            </div></div>
    
<div class="nextTopic">

   <div class="nextTopicTtile"><a style="text-decoration:none; color:#6741e2; text-transform:uppercase;"href="http://localhost:8000/score/rank/{{ nextId }}">{{ mathTopics[nextId-1].topicName }}</a>  
    <div class="nextSign"> &#x25BA;</div> 
  </div>
</div> 
</div>

{% endif %}
<a href="http://localhost:8000/user#">powrót</a>

    <script>
const scrollContainer = document.querySelector('.rankTable');
const listItems = document.querySelectorAll('.rankPerson');

scrollContainer.addEventListener('scroll', () => {
  let sizeFactor = 1; // Starting size for the first visible element
  const sizeDecrement = 0.2; // How much smaller each subsequent item gets

  listItems.forEach((item, index) => {
    const rect = item.getBoundingClientRect();
    const containerRect = scrollContainer.getBoundingClientRect();

    if (rect.bottom > containerRect.top && rect.top < containerRect.bottom) {
      // Element is visible in the container
      item.style.transform = `scale(${sizeFactor})`;
      item.style.fontSize = `${16 + (sizeFactor - 1) * 10}px`; // Adjust font size
      sizeFactor = Math.max(1, sizeFactor - sizeDecrement); // Gradually decrease size factor
    } else {
      // Element not visible, reset to default
      item.style.transform = `scale(.0001)`;
      item.style.fontSize = `16px`;
    }
  });
});


</script>
{% endblock %}
